OFW_INTERFACE_BASE = $(TOOLS_BASE_)ofw_interface
OFW_INTERFACE_BASE_ = $(OFW_INTERFACE_BASE)$(SEP)
OFW_INTERFACE_INT = $(INTERMEDIATE_)$(OFW_INTERFACE_BASE)
OFW_INTERFACE_INT_ = $(OFW_INTERFACE_INT)$(SEP)
OFW_INTERFACE_OUT = $(OUTPUT_)$(OFW_INTERFACE_BASE)
OFW_INTERFACE_OUT_ = $(OFW_INTERFACE_OUT)$(SEP)

OFW_INTERFACE_OUTPUT = boot/freeldr/freeldr/arch/powerpc/ofw_calls.s
OFW_INTERFACE_SOURCE = boot/freeldr/freeldr/arch/powerpc/ofw.c
OFW_INTERFACE_HEADER = boot/freeldr/freeldr/include/of_call.h
OFW_INTERFACE_INPUT = $(OFW_INTERFACE_BASE_)calls.ofw
OFW_INTERFACE_SERVICE_FILES = \
	$(OFW_INTERFACE_OUTPUT) \
	$(OFW_INTERFACE_SOURCE) \
	$(OFW_INTERFACE_HEADER)

$(OFW_INTERFACE_INT): | $(TOOLS_INT)
	$(ECHO_MKDIR)
	${mkdir} $@

ifneq ($(INTERMEDIATE),$(OUTPUT))
$(OFW_INTERFACE_OUT): | $(TOOLS_OUT)
	$(ECHO_MKDIR)
	${mkdir} $@
endif

OFW_INTERFACE_TARGET = \
	$(OFW_INTERFACE_OUT_)ofw_interface$(EXEPOSTFIX)

OFW_INTERFACE_SOURCES = $(addprefix $(OFW_INTERFACE_BASE_), \
	ofw_interface.cpp \
	)

OFW_INTERFACE_OBJECTS = \
	$(addprefix $(INTERMEDIATE_), $(OFW_INTERFACE_SOURCES:.cpp=.o))

OFW_INTERFACE_HOST_CFLAGS = $(TOOLS_CFLAGS)

OFW_INTERFACE_HOST_LFLAGS = $(TOOLS_LFLAGS)

$(OFW_INTERFACE_TARGET): $(OFW_INTERFACE_OBJECTS) | $(OFW_INTERFACE_OUT)
	$(ECHO_HOSTLD)
	${host_gpp} $(OFW_INTERFACE_OBJECTS) $(OFW_INTERFACE_HOST_LFLAGS) -o $@

$(OFW_INTERFACE_INT_)ofw_interface.o: $(OFW_INTERFACE_BASE_)ofw_interface.cpp | $(OFW_INTERFACE_INT)
	$(ECHO_HOSTCC)
	${host_gpp} $(OFW_INTERFACE_HOST_CFLAGS) -c $< -o $@

$(OFW_INTERFACE_SERVICE_FILES): $(OFW_INTERFACE_TARGET) $(OFW_INTERFACE_INPUT)
	$(ECHO_OFW)
	$(Q)$(OFW_INTERFACE_TARGET) \
		$(OFW_INTERFACE_INPUT) \
		$(OFW_INTERFACE_OUTPUT) \
		$(OFW_INTERFACE_SOURCE) \
		$(OFW_INTERFACE_HEADER)

.PHONY: ofw_interface
ofw_interface: $(OFW_INTERFACE_TARGET)

.PHONY: ofw_interface_clean
ofw_interface_clean:
	-@$(rm) $(OFW_INTERFACE_TARGET) $(OFW_INTERFACE_OBJECTS) 2>$(NUL)
clean: ofw_interface_clean
