macro(today RESULT)
    if(CMAKE_HOST_WIN32)
        execute_process(COMMAND "${ODYSSEY_SOURCE_DIR}/tools/getdate.exe" OUTPUT_VARIABLE ${RESULT})
        string(STRIP ${${RESULT}} ${RESULT})
    elseif(CMAKE_HOST_UNIX)
        execute_process(COMMAND "date" "+%Y%m%d" OUTPUT_VARIABLE ${RESULT})
	string(STRIP ${${RESULT}} ${RESULT})
    else()
        message(SEND_ERROR "date not implemented")
        set(${RESULT} 00000000)
    endif()
endmacro()

macro(inttohex INTVALUE OUTPUT_VARIABLE)
    list(APPEND HEXLIST 0 1 2 3 4 5 6 7 8 9 a b c d e f)
    list(GET HEXLIST ${INTVALUE} ${OUTPUT_VARIABLE})
endmacro()

macro(converttohex INTVALUE OUTPUT_VARIABLE)
    set(${OUTPUT_VARIABLE} "")
    set(REMAINING ${INTVALUE})
    while(REMAINING)
        math(EXPR REMAINDER "${REMAINING}%16")
        inttohex(${REMAINDER} HEXCHAR)
        math(EXPR REMAINING "${REMAINING}/16")
        set(${OUTPUT_VARIABLE} "${HEXCHAR}${${OUTPUT_VARIABLE}}")
    endwhile()
endmacro()

today(KERNEL_VERSION_BUILD)

set(KERNEL_VERSION_MAJOR "5")
set(KERNEL_VERSION_MINOR "3")
set(KERNEL_VERSION_PATCH_LEVEL "0")
set(COPYRIGHT_YEAR "2011")
# KERNEL_VERSION_BUILD_TYPE is "SVN", "RC1", "RC2" or "" (for the release)
set(KERNEL_VERSION_BUILD_TYPE "")


set(KERNEL_VERSION "${KERNEL_VERSION_MAJOR}.${KERNEL_VERSION_MINOR}")
if(KERNEL_VERSION_PATCH_LEVEL)
    set(KERNEL_VERSION "${KERNEL_VERSION}.${KERNEL_VERSION_PATCH_LEVEL}-${KERNEL_VERSION_BUILD_TYPE}")
else()
    set(KERNEL_VERSION "${KERNEL_VERSION}-${KERNEL_VERSION_BUILD_TYPE}")
endif()

math(EXPR ODYSSEY_DLL_VERSION_MAJOR "${KERNEL_VERSION_MAJOR}+42")
set(DLL_VERSION_STR "${ODYSSEY_DLL_VERSION_MAJOR}.${KERNEL_VERSION_MINOR}-${KERNEL_VERSION_BUILD_TYPE}")

# get svn revision number
set(REVISION "")
set(KERNEL_VERSION_BUILD_HEX "0")
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/.git")
	file(READ "${CMAKE_CURRENT_SOURCE_DIR}/.git/HEAD" GIT_HEAD)
	STRING(REGEX REPLACE "ref: refs/heads/(.*)\n" "\\1" GIT_BRANCH "${GIT_HEAD}" )
	file(READ "${CMAKE_CURRENT_SOURCE_DIR}/.git/refs/heads/${GIT_BRANCH}" GIT_REVISION)
	STRING(SUBSTRING "${GIT_REVISION}" 0 12 GIT_CLEAN_REV)
	set(REVISION ".${GIT_BRANCH}.${GIT_CLEAN_REV}")
endif()

configure_file(include/odyssey/version.h.cmake ${ODYSSEY_BINARY_DIR}/include/odyssey/version.h)
configure_file(include/odyssey/buildno.h.cmake ${ODYSSEY_BINARY_DIR}/include/odyssey/buildno.h)
